#!/bin/bash
#
# ax25-upd for use with systemd & direwolf
# Ax25, rose, & mkiss - are pre-loaded via /etc/modules or built into kernel
#
# Uncomment this statement for debug echos
#DEBUG=1

SBINDIR=/usr/local/sbin
BINDIR=/usr/local/bin
UDRCII=false

# portname set in /etc/ax25/axports
PORTNAME="udr0"
SERIALPORT_DIREWOLF="/tmp/kisstnc"

firmware_prodfile="/sys/firmware/devicetree/base/hat/product"
firmware_prod_idfile="/sys/firmware/devicetree/base/hat/product_id"

function dbgecho { if [ ! -z "$DEBUG" ] ; then echo "$*"; fi }

# ===== udrc id_check =====

function id_check() {
# Initialize to EEPROM not found
udrc_prod_id=0
# Does firmware file exist
if [ -f $firmware_prodfile ] ; then
   # Read product file
   UDRC_PROD="$(cat $firmware_prodfile)"
   sizeprodstr=${#UDRC_PROD}
   dbgecho "UDRC_PROD: $UDRC_PROD, size: $sizeprodstr"
   if (( $sizeprodstr < 34 )) ; then
      dbgecho "Probably not a Universal Digital Radio Controller: $UDRC_PROD"
      udrc_prod_id=1
   elif [ "${UDRC_PROD:0:34}" == "Universal Digital Radio Controller" ] ; then
      dbgecho "Definitely some kind of UDRC"
   else
      echo "Found something but not a UDRC: $UDRC_PROD"
      udrc_prod_id=1
   fi

   # get last 2 characters in product file
   UDRC_PROD=${UDRC_PROD: -2}
   # Read product id file
   UDRC_ID="$(cat $firmware_prod_idfile)"
   #get last character in product id file
   UDRC_ID=${UDRC_ID: -1}
   udrc_prod_id=$UDRC_ID

   dbgecho "Product: $UDRC_PROD, Id: $UDRC_ID"
   if [ "$UDRC_PROD" == "II" ] && [ "$UDRC_ID" == "3" ] ; then
      dbgecho "Found a UDRC II"
      UDRCII=true
   elif [ "$UDRC_PROD" == "er" ] && [ "$UDRC_ID" == "2" ] ; then
      dbgecho "Found an original UDRC"
   else
      udrc_prod_id=1
   fi

else
   # RPi HAT ID EEPROM may not have been programmed in engineering samples
   # or there is no RPi HAT installed.
   udrc_prod_id=0
fi

return $udrc_prod_id
}

# ===== main =====

echo "ax25-upd: Start Port ${PORTNAME} with device ${SERIALPORT_DIREWOLF}"

if [ -L $SERIALPORT_DIREWOLF ] ; then
    echo "Direwolf serial port ready"
else
    echo "Direwolf serial port NOT FOUND"
    exit 1
fi

# Check which UDRC product is found
id_check

if [ "$UDRCII" = true ]; then
# use port 2 with mkiss
   pseudoterm=$($SBINDIR/mkiss $SERIALPORT_DIREWOLF none /dev/ptmx | tail -1)
   echo "using mkiss with UDRC II and pseudo term=$pseudoterm on port 2"
   $SBINDIR/kissattach  ${pseudoterm} ${PORTNAME} 44.24.197.66 >/tmp/ax25-config.tmp
   dbgecho "kissattach return: $?"

else
# use port 1 with mkiss
   pseudoterm=$($SBINDIR/mkiss $SERIALPORT_DIREWOLF /dev/ptmx none | tail -1)
   echo "using mkiss with UDRC and pseudo term=$pseudoterm on port 1"
   $SBINDIR/kissattach  ${pseudoterm} ${PORTNAME} 44.24.197.66 >/tmp/ax25-config.tmp

#   echo "using kissattach without mkiss"
# Attach KISS-device to Port - audio index port 0
#   $SBINDIR/kissattach  ${SERIALPORT_DIREWOLF} ${PORTNAME} 44.24.197.66 >/tmp/ax25-config.tmp
   dbgecho "kissattach return: $?"
fi

/etc/ax25/ax25dev-parms

# AX25-upd (End)
echo
echo "ax25-upd script finished"
exit 0
